name: Update QA S3 bucket.
#https://github.com/marketplace/actions/invalidate-aws-cloudfront

on:
  workflow_dispatch: #workflow_call:
    inputs:
      Environment:
        description: 'Environment to deploy Qa1-Qa6'
        type: choice
        required: true
        options: 
        - qa1
        - qa2
        - qa3
        - qa4
        - qa5
        - qa6
      Tag:
        description: 'Branch Name to deploy into Qa1-Qa6'
        type: string
        required: true
        default: ''

jobs:
  init:
    runs-on: self-hosted
    #runs-on: ubuntu-latest #Uncomment if it has to be run on a public Agent

    steps:
            
    - uses: actions/setup-node@v3
      with:
        node-version: 14            
            
    - uses: actions/checkout@v2.0.0
      with:
        ref: '${{github.event.inputs.Tag}}'

    - name: Env Setup
      run: |
        echo "$(yarn bin)" >> $GITHUB_PATH
        echo "Environment=${{github.event.inputs.Environment}}" >> $GITHUB_ENV
        echo "ROS_BUCKET_NAME=${{ secrets.ROS_BUCKET_NAME }}" >> $GITHUB_ENV
        echo "CONSUL_HTTP_TOKEN=${{ secrets.CONSUL_OLD_QA_HTTP_TOKEN }}" >> $GITHUB_ENV
        
    - name: (GLOBAL) Build
      run: |
        yarn install --no-cache --production
        yarn add @angular/cli@9.0.0
        npm rebuild node-sass
        ng build --prod
        sudo rm -f /usr/local/bin/confd
        sudo curl https://github.com/kelseyhightower/confd/releases/download/v0.16.0/confd-0.16.0-linux-amd64 -o /usr/local/bin/confd
        sudo chmod +x /usr/local/bin/confd
        
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.S3_OLD_QA_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.S3_OLD_QA_AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
         
    - id: install-aws-cli
      uses: unfor19/install-aws-cli-action@v1.0.3
      with:
        version: 2     # default
        verbose: false # default
        arch: amd64    # allowed values: amd64, arm64
  
    - name: Executing deploy script
      run: |
        chmod +x deploy.sh
        sudo rm -rf /etc/confd
        sudo cp -fr confd /etc/confd
        /usr/local/bin/confd -onetime -backend consul -node ${{secrets.CONSUL_OLD_QA_HTTP_ADDR}} -prefix "appsettings/${{github.event.inputs.Environment}}" -log-level debug
        ./deploy.sh 'dist/ros-frontend' ${ROS_BUCKET_NAME}-${Environment}

    - name: Post to a Slack channel
      id: slack
      uses: slackapi/slack-github-action@v1.17.0
      if: always()
      with:
        channel-id: ${{ secrets.SLACK_BOT_CHANNEL }}
        payload: |
            {
              "text": ":github: Update S3 Ros ${{github.event.inputs.Environment}} Bucket - Status: ${{ job.status }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":github: Update S3 Ros ${{github.event.inputs.Environment}} Bucket - Status: ${{ job.status }}\n\n${{ github.event.inputs.Tag }}"
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "Author: <https://github.com/${{ github.event.sender.login }}|@${{ github.event.sender.login }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "Commit Sha: >${{ github.sha }}>"
                    }
                  ]
                }
              ]
            }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        button_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

    # Put a condition to see if the cloudfront invalidation flag is off
    #- name: Invalidate CloudFront
    #  uses: chetan/invalidate-cloudfront-action@v2
    #  env:
    #    DISTRIBUTION: ${DISTRIBUTION} #${{ env.DISTRIBUTION }}
    #    PATHS: "/*"
    #    AWS_ACCESS_KEY_ID: ${{ secrets.S3_OLD_QA_AWS_ACCESS_KEY_ID }}
    #    AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_OLD_AWS_SECRET_ACCESS_KEY }}
    #    AWS_REGION: 'us-west-2'   # optional: defaults to us-east-1
