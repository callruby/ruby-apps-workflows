on:
  workflow_dispatch:
    inputs:
      Tag:
        description: 'Image tag to be used again for this release branch commit'
        type: string
        required: true
        default: 'GHRC_'        
      
name: Update release image.
env:
  REPOSITORY_WORKFLOW: "ruby-apps-workflows"
  AWS_DEFAULT_REGION: "us-west-1"
jobs:
  build:
    environment: default
    runs-on: self-hosted
    #runs-on: ubuntu-latest #Uncomment if it has to be run on a public Agent
    if: github.ref == 'refs/heads/release'
    steps:
    - uses: actions/checkout@v2.0.0

    - name: Turnstyle
      uses: softprops/turnstyle@v1
      with:
         continue-after-seconds: 500 
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                      
    - name: (GLOBAL) Check out ${{env.REPOSITORY_WORKFLOW}} repository
      uses: actions/checkout@master
      with:
        token: ${{ secrets.PAT }}
        repository: callruby/${{env.REPOSITORY_WORKFLOW}}
        path: ${{env.REPOSITORY_WORKFLOW}}
        ref: 'master'
        fetch-depth: 1
        
    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v4
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PASSPHRASE }}
        git_user_signingkey: true
        git_commit_gpgsign: true
                  
    - name: (GLOBAL) Configure Global Variables.
      run: |
        echo "EKS_SERVICE=${{secrets.EKS_SERVICE}}" >> $GITHUB_ENV
        TOK=$(echo U2FsdGVkX1+quT9qjFncsdkCMVjo8ghWacdeqPOooL1p1i930rQL88mso6ek8TQV047H4m1rPLrkHs4iOcrVIRvcvuvEwArP2ZzP8/5IyKUXlQ9csJtWDx82PFbbgB+B | openssl enc -aes256 -base64 -d -k ${{secrets.GPG_PASSPHRASE}}| grep xox)
        echo "SLTOK=$(echo $TOK)" >> $GITHUB_ENV        
   
   #Comment if it has to be run on a public Agent 
    - name: (GLOBAL) Configure AWS credentials using the secrets obtained from Vault
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
            
    - name: Set Image Tag
      id: slug
      run: |
        echo "IMAGE_TAG=$(echo "${{github.event.inputs.Environment}}" >> $GITHUB_ENV
        
    - name: (SHARED) Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1      
        
    - name: (DEV) Build, Test, Tag, Push.
      id: Deploy
      run: |
        echo "===================================="
        echo "DEBUG:"
        echo "ECR_REPOSITORY: ${EKS_SERVICE}"
        echo "IMAGE_TAG: $IMAGE_TAG"
        echo "EKS_SERVICE: ${EKS_SERVICE}"
        echo "===================================="
        echo '${{ secrets.PFX_CERT }}' | base64 --decode >> ssl_cert.pfx
        echo '${{ secrets.SSL_PEM_CERT }}' | base64 --decode >> ssl_cert.pem
        echo '${{ secrets.SSL_PEM_KEY }}' | base64 --decode >> ssl_key.pem        
        echo '${{ secrets.NUGET_CONFIG }}' >> NuGet.config
        ls -la ruby-apps-workflows/Dockerfile*
        cp -f ruby-apps-workflows/Dockerfile-${EKS_SERVICE} Dockerfile
        echo "Building Docker Image"
        echo "===================================="
        docker build -t ${{ steps.login-ecr.outputs.registry }}/${EKS_SERVICE}:$IMAGE_TAG --build-arg EKS_SERVICE=${EKS_SERVICE} .
        echo "===================================="
        echo "Pushing Docker Image"
        echo "===================================="
        docker push ${{ steps.login-ecr.outputs.registry }}/${EKS_SERVICE}:$IMAGE_TAG
                
    - name: Post to a Slack channel
      id: slack
      uses: slackapi/slack-github-action@v1.17.0
      if: always()
      with:
        channel-id: C032F2NNUP4  #${{ secrets.SLACK_BOT_CHANNEL }}
        slack-message: "The release image ${{env.IMAGE_TAG}} for ${{ github.event.repository.name }} was updated , result: ${{ job.status }}\n"
      env:
        SLACK_BOT_TOKEN: ${{ env.SLTOK }} #${{ secrets.SLACK_BOT_TOKEN }}
        #see https://github.com/callruby/blueprint-aws-terraform-operator-samples/blob/main/.github/workflows/slack_test.yaml
    - name: Checkout code
      uses: actions/checkout@v2
