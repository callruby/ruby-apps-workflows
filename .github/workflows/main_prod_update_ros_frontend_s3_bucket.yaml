name: Update Production S3 bucket.
#https://github.com/marketplace/actions/invalidate-aws-cloudfront

on:
  workflow_dispatch: #workflow_call:

jobs:
  init:
    runs-on: self-hosted
    #runs-on: ubuntu-latest #Uncomment if it has to be run on a public Agent

    steps:
            
    - uses: actions/setup-node@v3
      with:
        node-version: 14            
            
    - uses: actions/checkout@v2.0.0
      with:
        ref: 'release'

    - name: Env Setup
      run: |
        echo "$(yarn bin)" >> $GITHUB_PATH
        echo "Environment=prod" >> $GITHUB_ENV
        echo "ROS_BUCKET_NAME=${{ secrets.ROS_BUCKET_NAME }}" >> $GITHUB_ENV
        CONSUL_IP=$(nslookup vpce-06c897dfb198dc918-wdh6o1cr-us-west-1b.vpce-svc-0cc82833fc154867e.us-west-1.vpce.amazonaws.com | grep Address: | awk {'print $2'} | grep -v 172)
        sudo cp -f /etc/hosts /etc/hosts.bkp
        echo "$CONSUL_IP prodconsul.callruby.online" | sudo tee -a /etc/hosts        
        
    - name: (GLOBAL) Build
      run: |
        yarn install --no-cache --production
        yarn add @angular/cli@9.0.0
        npm rebuild node-sass
        ng build --prod
        
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.S3_OLD_PROD_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.S3_OLD_PROD_AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
         
    - id: install-aws-cli
      uses: unfor19/install-aws-cli-action@v1.0.3
      with:
        version: 2     # default
        verbose: false # default
        arch: amd64    # allowed values: amd64, arm64
        
    - name: Get value from consul
      id: consul
      uses: blablacar/action-consul-kv@master
      env:
        CONSUL_HTTP_SSL_VERIFY: true
      with:
        key: appsettings/prl-ecs/rosfrontend
        host: prodconsul.callruby.online #vpce-06c897dfb198dc918-wdh6o1cr-us-west-1b.vpce-svc-0cc82833fc154867e.us-west-1.vpce.amazonaws.com
        port: 8501
        scheme: https
        token: ${{ secrets.CONSUL_OLD_PROD_HTTP_TOKEN }}        
  
    - name: Executing deploy script
      run: |
        sudo cp -f /etc/hosts.bkp /etc/hosts 
        chmod +x deploy.sh
        sudo rm -f src/config/config.json
        mkdir -p dist/ros-frontend/config
        cat <<EOF > dist/ros-frontend/config/config.json
        ${{ steps.consul.outputs.data }}
        EOF
        ./deploy.sh 'dist/ros-frontend' ${ROS_BUCKET_NAME}

    - name: Post to a Slack channel
      id: slack
      uses: slackapi/slack-github-action@v1.17.0
      if: always()
      with:
        channel-id: ${{ secrets.SLACK_BOT_CHANNEL }}
        payload: |
            {
              "text": ":github: Update S3 Ros production Bucket - Status: ${{ job.status }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":github: Update S3 Ros production Bucket - Status: ${{ job.status }}\n\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "Author: <https://github.com/${{ github.event.sender.login }}|@${{ github.event.sender.login }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "Commit Sha: >${{ github.sha }}>"
                    }
                  ]
                }
              ]
            }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        button_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

    # Put a condition to see if the cloudfront invalidation flag is off
    #- name: Invalidate CloudFront
    #  uses: chetan/invalidate-cloudfront-action@v2
    #  env:
    #    DISTRIBUTION: ${DISTRIBUTION} #${{ env.DISTRIBUTION }}
    #    PATHS: "/*"
    #    AWS_ACCESS_KEY_ID: ${{ secrets.S3_OLD_PROD_AWS_ACCESS_KEY_ID }}
    #    AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_PROD_AWS_SECRET_ACCESS_KEY }}
    #    AWS_REGION: 'us-west-2'   # optional: defaults to us-east-1
