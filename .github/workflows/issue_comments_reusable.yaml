on:
  workflow_call:
    inputs:
      tag: 
        type: string
    secrets:
      PAT:
        required: true
      GPG_PRIVATE_KEY:
        required: true
      GPG_PASSPHRASE:
        required: true
      EKS_SERVICE:
        required: true
      SHARED_GITHUB_K8S_KUBECONFIG:
        required: true

name: Execute kubernetes commands from github issues.

env:
  KUBECONFIG: '${{ github.workspace }}/.kube/gh-kubeconfig'
  
jobs:
  comment:
    runs-on: self-hosted
    #runs-on: ubuntu-latest
    if: ${{ !github.event.issue.pull_request }} && (${{ github.event.comment.body == '/get_pod_ip' }} || ${{ github.event.comment.body == '/get_pod' }} || ${{ github.event.comment.body == '/get_pod_service' }} || ${{ github.event.comment.body == '/get_pod_status' }} || ${{ github.event.comment.body == '/get_pod_logs' }})
    steps:
      - uses: azure/setup-kubectl@v1
        with:
          version: 'v1.15.0'

      - name: Executing get pods
        id: kubectl
        if: ${{ github.event.comment.body == '/get_pod' }}
        run: |
          mkdir -p '${{ github.workspace }}/.kube'
          echo '${{ secrets.SHARED_GITHUB_K8S_KUBECONFIG }}' | base64 -d > $KUBECONFIG
          
          echo 'KUBE_OUTPUT<<EOF' >> $GITHUB_ENV
          kubectl get pods -n development-apps | grep ${{secrets.EKS_SERVICE}} >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          
      - name: Executing get pod ip
        id: kubectl_get_pod_ip
        if: ${{ github.event.comment.body == '/get_pod_ip' }}
        run: |
          mkdir -p '${{ github.workspace }}/.kube'
          echo '${{ secrets.SHARED_GITHUB_K8S_KUBECONFIG }}' | base64 -d > $KUBECONFIG
                    
          echo 'KUBE_OUTPUT<<EOF' >> $GITHUB_ENV
          kubectl describe pods -n development-apps --selector=app.kubernetes.io/app=${{secrets.EKS_SERVICE}} --show-events=false | grep IP: | grep 10 >> $GITHUB_ENV         
          echo 'EOF' >> $GITHUB_ENV          


      - name: Executing get pod status
        id: kubectl_get_pod_status
        if: ${{ github.event.comment.body == '/get_pod_status' }}
        run: |
          mkdir -p '${{ github.workspace }}/.kube'
          echo '${{ secrets.SHARED_GITHUB_K8S_KUBECONFIG }}' | base64 -d > $KUBECONFIG
                    
          echo 'KUBE_OUTPUT<<EOF' >> $GITHUB_ENV
          kubectl describe pods -n development-apps --selector=app.kubernetes.io/app=${{secrets.EKS_SERVICE}} --show-events=false | grep ContainersReady >> $GITHUB_ENV         
          echo 'EOF' >> $GITHUB_ENV

      - name: Executing get pod service
        id: kubectl_get_pod_service
        if: ${{ github.event.comment.body == '/get_pod_service' }}
        run: |
          mkdir -p '${{ github.workspace }}/.kube'
          echo '${{ secrets.SHARED_GITHUB_K8S_KUBECONFIG }}' | base64 -d > $KUBECONFIG
          
          echo 'KUBE_OUTPUT<<EOF' >> $GITHUB_ENV
          kubectl get svc -n development-apps --selector=app.kubernetes.io/app=${{secrets.EKS_SERVICE}} | grep ${{secrets.EKS_SERVICE}} >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Executing get pod logs
        id: kubectl_get_pod_logs
        if: ${{ github.event.comment.body == '/get_pod_logs' }}
        run: |
          mkdir -p '${{ github.workspace }}/.kube'
          echo '${{ secrets.SHARED_GITHUB_K8S_KUBECONFIG }}' | base64 -d > $KUBECONFIG
          
          echo 'KUBE_OUTPUT<<EOF' >> $GITHUB_ENV
          kubectl logs -n development-apps --selector=app.kubernetes.io/app=${{secrets.EKS_SERVICE}} -c base-image >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      #- name: Kubectl Debug
        #id: kubectl_debug
        #run: |
          #echo ${{env.KUBE_OUTPUT}}

      - uses: actions/github-script@v4
        with:
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '${{env.KUBE_OUTPUT}}'
            })
